#!/usr/bin/python3
""" State Module for HBNB project """

from sqlalchemy import Column, String
from sqlalchemy.orm import relationship
from models.base_model import BaseModel
if models.storage_type == "db":
    from models.base_model import Base

# import sqlalchemy
# from models.city import City


class State(BaseModel, Base):
    """ State class """
    __tablename__ = "states"
    name = Column(String(128), nullable=False)
    cities = relationship("City", backref="state",
                          cascade="all, delete-orphan")

    @property
    def cities(self):
        """
        Return the list of ``City`` instances with ``state_id`` equal to
        the current ``State.id``
        """
        import models
        return [value for key, value in models.storage.all().items()
                if key.split(".")[0] == "City" and value.state_id == self.id]
